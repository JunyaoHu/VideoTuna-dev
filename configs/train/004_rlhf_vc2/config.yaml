model:
  base_learning_rate: 6.0e-06 # 1.5e-04
  scale_lr: False
  pretrained_checkpoint: /home/liurt/liurt_data/haoyu/DPO-videocrafter/init_ckpt/vc2/model.ckpt
  target: src.lvdm.models.ddpm3d.RewardLVDMTrainer
  params:
    lora_args:
      # lora_ckpt: "/path/to/lora.ckpt" # first time training, no need; this is for resume training. 
      target_modules:  ["to_q", "to_k", "to_v"]
      lora_rank: 4
      lora_alpha: 1
      lora_dropout: 0.0
    loss_type: aesthetic
    log_every_t: 2
    linear_start: 0.00085
    linear_end: 0.012
    num_timesteps_cond: 1
    timesteps: 1000
    first_stage_key: video
    cond_stage_key: caption
    cond_stage_trainable: false
    conditioning_key: crossattn
    image_size:
    - 40
    - 64
    channels: 4
    scale_by_std: false
    scale_factor: 0.18215
    use_ema: false
    uncond_type: empty_seq
    monitor: val/loss_simple_ema
    encoder_type: 2d
    use_scale: true
    scale_b: 0.7 # adapt to videocrafter-v2
    unet_config:
      target: src.lvdm.modules.networks.openaimodel3d.UNetModel
      params:
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions:
        - 4
        - 2
        - 1
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 4
        - 4
        num_head_channels: 64
        transformer_depth: 1
        context_dim: 1024
        use_linear: true
        use_checkpoint: false
        temporal_conv: true # adapt to videocrafter-v2
        temporal_attention: true
        temporal_selfatt_only: true
        use_relative_position: false # adapt to videocrafter-v2
        use_causal_attention: false
        temporal_length: 16
        addition_attention: true
        fps_cond: true # adapt to videocrafter-v2
    first_stage_config:
      target: src.lvdm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
    cond_stage_config:
      target: src.lvdm.modules.encoders.condition.FrozenOpenCLIPEmbedder
      params:
        freeze: true
        layer: penultimate
        
data:
  target: data.lightning_data.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 16
    wrap: false
    train:
      target: data.rlhf.RLHF_PROMPT
      params:
        data_root: inputs/t2v/rlhf_dataset/chatgpt_custom_instruments.txt
        resolution:  [320, 512]
        video_length: 4  # set to 4 for faster training RLHF  
        # subset_split: all
    # validation:
    #   target: data.macvid.MaCVid
    #   params:
    #     data_root: /home/liurt/liurt_data/haoyu/dataset/elon_musk_video/val_data.yaml
    #     resolution: [320, 512]
    #     video_length: 16
    #     subset_split: all

lightning:
  # strategy: deepspeed
  callbacks:
    image_logger:
      target: utils.callbacks.ImageLogger
      params:
        to_local: True
        save_dir: log_image
        batch_frequency:  100000
        max_images: 2
        log_images_kwargs:
          unconditional_guidance_scale: 12 # need this, otherwise it is grey
        
    metrics_over_trainsteps_checkpoint:
      target: pytorch_lightning.callbacks.ModelCheckpoint
      params:
        filename: "step-{step:04}"
        save_weights_only: True
        every_n_epochs: null
        every_n_train_steps: 199
  trainer:
    benchmark: True
    num_workers: 10
    num_nodes: 1
    accumulate_grad_batches: 1
    max_epochs: 100 # for first step training max_epoch = 3 
  modelcheckpoint:
    target: pytorch_lightning.callbacks.ModelCheckpoint
    params:
      every_n_epochs: 1
      filename: "{epoch:04}-{step:06}"